---
## https://github.com/ansible/ansible/issues/22397
## Ansible 2.3 generates a WARNING when using {{ }} in defaults variables of role
## this workarounds it until Ansible resolves the issue:
- set_fact:
    stop_non_migratable_vms: "{{ stop_non_migratable_vms }}"

- block:
    - name: Login to oVirt
      # TODO: Remove me when 2.5 is released:
      ovirt_auth_25:
        url: "{{ engine_url | default(omit) }}"
        username: "{{ engine_user | default(omit) }}"
        password: "{{ engine_password | default(omit) }}"
        ca_file: "{{ engine_cafile | default(omit) }}"
        insecure: "{{ engine_insecure | default(true) }}"
      when: ovirt_auth is undefined
      register: loggedin
      tags:
        - always

    - name: Get hosts
      ovirt_hosts_facts:
        auth: "{{ ovirt_auth }}"
        pattern: "cluster={{ cluster_name | mandatory }} {{ check_upgrade | ternary('', 'update_available=true') }} {{ host_names | map('regex_replace', '(.*)', 'name=\\1') | list | join(' or ') }} {{ host_statuses | map('regex_replace', '(.*)', 'status=\\1') | list | join(' or ') }}"
      check_mode: "no"

    - name: Check if there are hosts to be updated
      debug:
        msg: "No hosts to be updated"
      when: ovirt_hosts | length == 0

    - block:
        - name: Get cluster facts
          ovirt_clusters_facts:
            auth: "{{ ovirt_auth }}"
            pattern: "name={{ cluster_name }}"
          check_mode: "no"

        - name: Get name of the original scheduling policy
          ovirt_scheduling_policies_facts:
            auth: "{{ ovirt_auth }}"
            id: "{{ ovirt_clusters[0].scheduling_policy.id }}"
          check_mode: "no"

        - name: Remember the cluster scheduling policy
          set_fact:
            cluster_scheduling_policy: "{{ ovirt_scheduling_policies[0].name }}"

        - name: Get list of VMs in cluster
          ovirt_vms_facts:
            auth: "{{ ovirt_auth }}"
            pattern: "cluster={{ cluster_name }}"
          check_mode: "no"

        - name: Get API facts
          # TODO: Change when Ansible 2.5 is released:
          # ovirt_api_facts:
          ovirt_api_facts_internal_25:
            auth: "{{ ovirt_auth }}"
          check_mode: "no"

        - name: Set in cluster upgrade policy
          ovirt_clusters:
            auth: "{{ ovirt_auth }}"
            name: "{{ cluster_name }}"
            scheduling_policy: cluster_maintenance
          register: cluster_policy
          when:
            - (ovirt_api.product_info.version.major >= 4 and ovirt_api.product_info.version.major >= 2) or
              (ovirt_api.product_info.version.major == 4 and ovirt_api.product_info.version.major == 1 and ovirt_api.product_info.version.revision >= 4)

        - name: Shutdown VMs which can be stopped
          ovirt_vms:
            auth: "{{ ovirt_auth }}"
            state: stopped
            name: "{{ item }}"
            force: true
          with_items:
            - "{{ stopped_vms | default([]) }}"

        - include: pinned_vms.yml

        # Update only those hosts that aren't in list of hosts were VMs are pinned
        # or if stop_non_migratable_vms is enabled, which means we stop pinned VMs
        - include: upgrade.yml
          with_items:
            - "{{ ovirt_hosts }}"
          when: "item.id not in host_ids or stop_non_migratable_vms"

      when: ovirt_hosts | length > 0
      always:
        - name: Set original cluster policy
          ovirt_clusters:
            auth: "{{ ovirt_auth }}"
            name: "{{ cluster_name }}"
            scheduling_policy: "{{ cluster_scheduling_policy }}"
          when: cluster_policy.changed | default(false)

        - name: Start again stopped VMs
          ovirt_vms:
            auth: "{{ ovirt_auth }}"
            name: "{{ item }}"
          ignore_errors: "yes"
          with_items:
            - "{{ stopped_vms | default([]) }}"

        - name: Start again pin to host VMs
          ovirt_vms:
            auth: "{{ ovirt_auth }}"
            name: "{{ item }}"
          ignore_errors: "yes"
          with_items:
            - "{{ pinned_vms_names | default([]) }}"
          when: "stop_non_migratable_vms"

  always:
    - name: Logout from oVirt
      ovirt_auth:
        state: absent
        ovirt_auth: "{{ ovirt_auth }}"
      when: not loggedin.skipped | default(false)
      tags:
        - always
